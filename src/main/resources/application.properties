spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache: false

spring.messages.basename=validation
server.port=8181

spring.datasource.url=jdbc:postgresql://localhost:5432/Personal
spring.datasource.username=postgres
spring.datasource.password=JAVAtechnology
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.default_schema=dbo

#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=username
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true

#By design, the in-memory database is volatile, and data will be lost when we restart the application.
#We can change that behavior by using file-based storage
#spring.datasource.url=jdbc:h2:file:/data/demo

#By default, the H2 console is not enabled in Spring.
#To enable it, we need to add the following property to application.properties
spring.h2.console.enabled=true
#we can navigate to http://localhost:8080/h2-console, which will present us with a login page.


